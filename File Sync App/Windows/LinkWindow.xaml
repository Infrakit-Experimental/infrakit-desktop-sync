<Window
    x:Class="File_Sync_App.LinkWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:File_Sync_App.InputWindows"
    xmlns:root="clr-namespace:File_Sync_App.Nodes"
    mc:Ignorable="d"
    Title="{DynamicResource link.title.new}"
    Icon="/Resources/Icons/Logo.ico"
    Height="500"
    Width="800"
    MinHeight="250"
    MinWidth="400"
    ResizeMode="CanResizeWithGrip"
    WindowStartupLocation="CenterScreen">

    <Grid
        Margin="5">

        <!--#region structure definitions-->

        <Grid.RowDefinitions>
            
            <RowDefinition
                    Height="30"/>

            <RowDefinition
                    Height="*"/>

            <RowDefinition
                    Height="auto"/>

            <RowDefinition
                    Height="*"/>

            <RowDefinition
                    Height="30"/>

        </Grid.RowDefinitions>

        <!--#endregion structure definitions-->

        <!--#region general-->

        <!-- Grid to contain the link edit controls. -->
        <Grid
            Grid.Row="0"
            Margin="0">

            <!--#region structure definitions-->

            <Grid.ColumnDefinitions>
                
                <ColumnDefinition
                    Width="auto"/>

                <ColumnDefinition
                    Width="*"/>
                
                <ColumnDefinition
                    Width="auto"/>
                
                <ColumnDefinition
                    Width="auto"/>
                
            </Grid.ColumnDefinitions>

            <!--#endregion structure definitions-->

            <!-- TextBlock to display the link name label. -->
            <TextBlock
                Grid.Column="0"
                Margin="5,5,0,5"
                Text="{DynamicResource link.name}"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Center"/>

            <!-- TextBox to enter the link name. -->
            <TextBox
                Grid.Column="1"
                Margin="5"
                x:Name="tbxLinkName"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                TextWrapping="NoWrap"/>

            <!-- Button to update the link. -->
            <Button
                Grid.Column="2"
                x:Name="btnUpdate"
                Style="{StaticResource BaseButtonStyle}"
                Margin="5"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Click="btnUpdate_Click">

                <TextBlock
                    Margin="5,0"
                    Text="{DynamicResource link.update}"/>
                
            </Button>

            <!-- CheckBox to enable or disable the link. -->
            <CheckBox
                Grid.Column="3"
                x:Name="cbActive"
                Content="{DynamicResource link.active}"
                Margin="5"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Center"
                IsChecked="True"/>

        </Grid>

        <!--#endregion general-->

        <!--#region local folder-->

        <Grid
            Grid.Row="1"
            MinHeight="100">

            <!--#region structure definitions-->

            <Grid.RowDefinitions>
                
                <RowDefinition
					Height="30"/>

                <RowDefinition
					Height="*"/>

                <RowDefinition
                    Height="30"/>

            </Grid.RowDefinitions>

            <!--#endregion structure definitions-->

            <!-- Grid to contain the local data button and text block. -->
            <Grid
				Grid.Row="0">

                <!--#region structure definitions-->

                <Grid.ColumnDefinitions>
                    
                    <ColumnDefinition
						Width="30"/>

                    <ColumnDefinition
						Width="*"/>

                </Grid.ColumnDefinitions>

                <!--#endregion structure definitions-->

                <!-- Button to open the local data folder. -->
                <Button
					Grid.Column="0"
					Grid.Row="0"
					Margin="5"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Stretch"
					Click="btnLocalData_Click"
					ToolTip="{DynamicResource link.ttFolder}"
                    BorderBrush="{x:Null}"
                    Foreground="{x:Null}"
                    Background="{x:Null}"
                    BorderThickness="0">

                    <Image
						Source="/Resources/Icons/HamburgerSettings.ico"
						Stretch="UniformToFill"/>

                    <!-- Trigger to reduce the opacity of the button when it is disabled. -->
                    <Button.Style>
                        
                        <Style 
                            TargetType="Button">
                            
                            <Style.Triggers>
                                
                                <Trigger 
                                    Property="IsEnabled" 
                                    Value="False">
                                    
                                    <Setter 
                                        Property="Opacity" 
                                        Value="0.5" />
                                    
                                </Trigger>
                                
                            </Style.Triggers>
                            
                        </Style>
                        
                    </Button.Style>

                </Button>

                <!-- TextBlock to display the local label. -->
                <TextBlock
					Grid.Column="1"
					Grid.Row="0"
					Text="{DynamicResource link.local}"
					Margin="5"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Center"/>

            </Grid>

            <!-- Scrollviewer to allow the user to scroll through the treeview if it is too large to fit in the available space. -->
            <ScrollViewer
				Grid.Row="1"
                x:Name="svLocal"
				Margin="5"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				HorizontalScrollBarVisibility="Auto"
				VerticalScrollBarVisibility="Disabled"
				BorderBrush="Black">

                <Grid>

                    <!-- Treeview to display the local data. -->
                    <TreeView
						x:Name="tvLocalData"
						Margin="0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						BorderBrush="{x:Null}"
						ItemsSource="{
							Binding RelativeSource={RelativeSource AncestorType=Window},
							Path=localData
						}">

                        <!-- ItemContainerStyle to expand or collapse the TreeViewItem elements based on the IsExpanded property of the associated Node object. -->
                        <TreeView.ItemContainerStyle>
                            
                            <Style
                                TargetType="{x:Type TreeViewItem}">
                                
                                <Setter
                                    Property="IsExpanded"
                                    Value="{
                                        Binding Path=(root:ItemHelper.IsExpanded),
										Mode=TwoWay
                                    }"/>
                                
                            </Style>
                            
                        </TreeView.ItemContainerStyle>

                        <!-- CheckBox to select or deselect the Node object. -->
                        <TreeView.Resources>
                            
                            <HierarchicalDataTemplate
								DataType="{x:Type root:Node}"
								ItemsSource="{Binding children}">

                                <CheckBox
									Content="{Binding content}"
									IsChecked="{
										Binding Path=isChecked,
										Mode=TwoWay
									}"
									Click="cbLocalData_Click">

                                    <!-- Style and Trigger to change the foreground color of the CheckBox element when the IsChecked property is false for the CheckBox element-->
                                    <CheckBox.Style>
                                        
                                        <Style
											TargetType="{x:Type CheckBox}">

                                            <Setter
												Property="Foreground"
												Value="Black"/>

                                            <Setter
												Property="Visibility"
												Value="Visible"/>

                                            <Style.Triggers>
                                                
                                                <DataTrigger
													Binding="{Binding Path=IsChecked}"
													Value="False">

                                                    <Setter
														Property="Foreground"
														Value="LightGray"/>

                                                </DataTrigger>
                                                
                                            </Style.Triggers>
                                            
                                        </Style>
                                        
                                    </CheckBox.Style>
                                    
                                </CheckBox>
                                
                            </HierarchicalDataTemplate>
                            
                        </TreeView.Resources>
                        
                    </TreeView>

                    <!-- Rectangle to provide a border for the treeview. -->
                    <Rectangle
						Margin="0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						Stroke="#FFABADB3"
						RadiusX="3"
						RadiusY="3"/>

                </Grid>

            </ScrollViewer>

            <!-- Grid to contain the buttons and the checkbox for interacting with the local folders. -->
            <Grid
                Grid.Row="2">

                <!--#region structure definitions-->

                <Grid.ColumnDefinitions>
                    
                    <ColumnDefinition
                        Width="25"/>

                    <ColumnDefinition
                        Width="25"/>

                    <ColumnDefinition
                        Width="*"/>

                </Grid.ColumnDefinitions>

                <!--#endregion structure definitions-->

                <!-- Button to open all local folders. -->
                <Button
					Grid.Column="0"
					x:Name="btnOpenAllLocal"
                    Margin="5,5,0,5"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Stretch"
                    BorderBrush="{x:Null}"
                    Foreground="{x:Null}"
                    Background="{x:Null}"
                    BorderThickness="0"
                    Click="btnOpenAllLocal_Click">

                    <Image
						Source="/Resources/Icons/OpenAll.ico"
						Stretch="UniformToFill"/>

                    <!-- Trigger to reduce the opacity of the button when it is disabled. -->
                    <Button.Style>
                        
                        <Style
                            TargetType="Button">
                            
                            <Style.Triggers>
                                
                                <Trigger
                                    Property="IsEnabled"
                                    Value="False">
                                    
                                    <Setter
                                        Property="Opacity"
                                        Value="0.5" />
                                    
                                </Trigger>
                                
                            </Style.Triggers>
                            
                        </Style>
                        
                    </Button.Style>
                    
                </Button>

                <!-- Button to close all local folders. -->
                <Button
					Grid.Column="1"
					x:Name="btnCloseAllLocal"
                    Margin="0,5,5,5"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Stretch"
                    BorderBrush="{x:Null}"
                    Foreground="{x:Null}"
                    Background="{x:Null}"
                    BorderThickness="0"
                    Click="btnCloseAllLocal_Click">

                    <Image
						Source="/Resources/Icons/CloseAll.ico"
						Stretch="UniformToFill"/>

                    <!-- Trigger to reduce the opacity of the button when it is disabled. -->
                    <Button.Style>
                        
                        <Style
                            TargetType="Button">
                            
                            <Style.Triggers>
                                
                                <Trigger
                                    Property="IsEnabled"
                                    Value="False">
                                    
                                    <Setter
                                        Property="Opacity"
                                        Value="0.5" />
                                    
                                </Trigger>
                                
                            </Style.Triggers>
                            
                        </Style>
                        
                    </Button.Style>
                    
                </Button>

                <!-- CheckBox to enable or disable the upload feature. -->
                <CheckBox
                    Grid.Column="2"
                    x:Name="cbUpload"
                    Content="{DynamicResource link.syncLocal}"
                    Margin="5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    IsChecked="True"
                    Checked="cbUpload_Checked"
                    Unchecked="cbUpload_Unchecked"/>

            </Grid>
            
        </Grid>

        <!--#endregion local folder-->

        <!-- Grid splitter to separate the local data treeview and Infrakit data treeview. -->
        <GridSplitter
            Grid.Row="2"
            Margin="5"
            VerticalAlignment="Stretch"
            HorizontalAlignment="Stretch"
            Height="2"
            Background="Gray" 
            ShowsPreview="true"/>

        <!--#region Infrakit folder-->

        <Grid
            Grid.Row="3">

            <!--#region structure definitions-->

            <Grid.RowDefinitions>
                
                <RowDefinition
                        Height="30"/>

                <RowDefinition
                        Height="*"/>

                <RowDefinition
                        Height="30"/>

            </Grid.RowDefinitions>

            <!--#endregion structure definitions-->

            <!-- Grid to contain the Infrakit data button and text block. -->
            <Grid
                Grid.Row="0">

                <!--#region structure definitions-->

                <Grid.ColumnDefinitions>
                    
                    <ColumnDefinition
                        Width="auto"/>

                    <ColumnDefinition
                        Width="auto"/>

                    <ColumnDefinition
                        Width="auto"/>

                    <ColumnDefinition
                        Width="*"/>

                </Grid.ColumnDefinitions>

                <!--#endregion structure definitions-->

                <!-- Button to get the Infrakit projects for the logged in user. -->
                <Button
                    Grid.Column="0"
                    Grid.Row="0"
                    x:Name="btnInfrakitProject"
                    Margin="5"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Height="20"
                    Width="20"
                    Click="btnInfrakitProject_Click"
                    ToolTip="{DynamicResource link.ttProject}"
                    BorderBrush="{x:Null}"
                    Foreground="{x:Null}"
                    Background="{x:Null}"
                    BorderThickness="0"
                    Visibility="Collapsed">

                    <Image
                        Source="/Resources/Icons/HamburgerSettings.ico"
                        Stretch="UniformToFill"/>

                    <!-- Trigger to reduce the opacity of the button when it is disabled. -->
                    <Button.Style>
                        
                        <Style 
                            TargetType="Button">
                            
                            <Style.Triggers>
                                
                                <Trigger 
                                    Property="IsEnabled" 
                                    Value="False">
                                    
                                    <Setter 
                                        Property="Opacity" 
                                        Value="0.5" />
                                    
                                </Trigger>
                                
                            </Style.Triggers>
                            
                        </Style>
                        
                    </Button.Style>

                </Button>

                <!-- Button to get the folder and files for the selected project. -->
                <Button
                    Grid.Column="0"
                    Grid.Row="0"
                    x:Name="btnInfrakitData"
                    Margin="5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Click="btnInfrakitData_Click"
                    Height="20"
                    Width="20"
                    ToolTip="{DynamicResource link.ttFolder}"
                    BorderBrush="{x:Null}"
                    Foreground="{x:Null}"
                    Background="{x:Null}"
                    BorderThickness="0"
                    Visibility="Collapsed">

                    <Image
                        Source="/Resources/Icons/HamburgerSettings.ico"
                        Stretch="UniformToFill"/>

                    <!-- Trigger to reduce the opacity of the button when it is disabled. -->
                    <Button.Style>
                        
                        <Style
                            TargetType="Button">
                            
                            <Style.Triggers>
                                
                                <Trigger 
                                    Property="IsEnabled" 
                                    Value="False">
                                    
                                    <Setter 
                                        Property="Opacity" 
                                        Value="0.5" />
                                    
                                </Trigger>
                                
                            </Style.Triggers>
                            
                        </Style>
                        
                    </Button.Style>

                </Button>

                <!-- TextBlock to display the Infrakit label. -->
                <TextBlock
                    Grid.Column="1"
                    Grid.Row="0"
                    Text="{DynamicResource link.Infrakit}"
                    Margin="5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"/>

                <!-- TextBlock to display the project label. -->
                <TextBlock
                    Grid.Column="2"
                    Grid.Row="0"
                    x:Name="tbProjectsTitle"
                    Text="{DynamicResource link.project}"
                    Margin="5,5,0,5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    TextWrapping="Wrap"/>

                <!-- TextBlock to display the selected project. -->
                <TextBlock
                    Grid.Column="3"
                    Grid.Row="0"
                    x:Name="tbProjects"
                    Margin="5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"/>

                <!-- ComboBox to select a project. -->
                <ComboBox
                    Grid.Column="3"
                    Grid.Row="0"
                    x:Name="cmdProjects"
                    Margin="5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Height="20"
                    IsReadOnly="True"
                    SelectionChanged="cmdProjects_SelectionChanged"/>

            </Grid>

            <!-- Scrollviewer to allow the user to scroll through the treeview if it is too large to fit in the available space. -->
            <ScrollViewer
                Grid.Row="1"
                x:Name="svInfrakit"
                Margin="5"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                HorizontalScrollBarVisibility="Auto"
                VerticalScrollBarVisibility="Disabled"
                BorderBrush="Black">

                <Grid>

                    <!-- Treeview to display the Infrakit data. -->
                    <TreeView
                        x:Name="tvInfrakitData"
                        Margin="0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        BorderBrush="{x:Null}"
                        ItemsSource="{
                            Binding RelativeSource={RelativeSource AncestorType=Window},
                            Path=infrakitData
                        }">

                        <!-- ItemContainerStyle to expand or collapse the TreeViewItem elements based on the IsExpanded property of the associated Node object. -->
                        <TreeView.ItemContainerStyle>
                            
                            <Style
                                TargetType="{x:Type TreeViewItem}">

                                <Setter
                                    Property="IsExpanded"
                                    Value="{
                                        Binding Path=(root:ItemHelper.IsExpanded),
										Mode=TwoWay
                                    }"/>

                            </Style>
                            
                        </TreeView.ItemContainerStyle>

                        <!-- CheckBox to select or deselect the Node object. -->
                        <TreeView.Resources>
                            
                            <HierarchicalDataTemplate
                                DataType="{x:Type root:Node}"
                                ItemsSource="{Binding children}">

                                <CheckBox
                                    Content="{Binding content}"
                                    IsChecked="{
                                        Binding Path=isChecked,
                                        Mode=TwoWay
                                    }"
                                    Click="cbInfrakitData_Click">

                                    <!-- Style and Trigger to change the foreground color of the CheckBox element when the IsChecked property is false for the CheckBox element-->
                                    <CheckBox.Style>
                                        
                                        <Style
                                            TargetType="{x:Type CheckBox}">

                                            <Setter
                                                Property="Foreground"
                                                Value="Black"/>

                                            <Setter
                                                Property="Visibility"
                                                Value="Visible"/>

                                            <Style.Triggers>
                                                
                                                <DataTrigger
                                                    Binding="{Binding Path=IsChecked}"
                                                    Value="False">

                                                    <Setter
                                                        Property="Foreground"
                                                        Value="LightGray"/>

                                                </DataTrigger>
                                                
                                            </Style.Triggers>
                                            
                                        </Style>
                                        
                                    </CheckBox.Style>
                                    
                                </CheckBox>
                                
                            </HierarchicalDataTemplate>
                            
                        </TreeView.Resources>
                                                
                    </TreeView>

                    <!-- Rectangle to provide a border for the treeview. -->
                    <Rectangle
                        Margin="0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Stroke="#FFABADB3"
                        RadiusX="3"
                        RadiusY="3"/>

                </Grid>

            </ScrollViewer>

            <!-- Grid to contain the buttons and the checkbox for interacting with the Infrakit folders. -->
            <Grid
                Grid.Row="2">

                <!--#region structure definitions-->

                <Grid.ColumnDefinitions>
                    
                    <ColumnDefinition
                        Width="25"/>

                    <ColumnDefinition
                        Width="25"/>

                    <ColumnDefinition
                        Width="*"/>

                </Grid.ColumnDefinitions>

                <!--#endregion structure definitions-->

                <!-- Button to open all Infrakit folders. -->
                <Button
					Grid.Column="0"
					x:Name="btnOpenAllInfrakit"
                    Margin="5,5,0,5"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Stretch"
                    BorderBrush="{x:Null}"
                    Foreground="{x:Null}"
                    Background="{x:Null}"
                    BorderThickness="0"
                    Click="btnOpenAllInfrakit_Click">

                    <Image
						Source="/Resources/Icons/OpenAll.ico"
						Stretch="UniformToFill"/>

                    <!-- Trigger to reduce the opacity of the button when it is disabled. -->
                    <Button.Style>
                        
                        <Style
                            TargetType="Button">
                            
                            <Style.Triggers>
                                
                                <Trigger
                                    Property="IsEnabled" 
                                    Value="False">
                                    
                                    <Setter 
                                        Property="Opacity" 
                                        Value="0.5" />
                                    
                                </Trigger>
                            
                            </Style.Triggers>
                            
                        </Style>
                        
                    </Button.Style>
                    
                </Button>

                <!-- Button to close all Infrakit folders. -->
                <Button
					Grid.Column="1"
					x:Name="btnCloseAllInfrakit"
                    Margin="0,5,5,5"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Stretch"
                    BorderBrush="{x:Null}"
                    Foreground="{x:Null}"
                    Background="{x:Null}"
                    BorderThickness="0"
                    Click="btnCloseAllInfrakit_Click">

                    <Image
						Source="/Resources/Icons/CloseAll.ico"
						Stretch="UniformToFill"/>

                    <!-- Trigger to reduce the opacity of the button when it is disabled. -->
                    <Button.Style>
                        
                        <Style 
                            TargetType="Button">
                            
                            <Style.Triggers>
                                
                                <Trigger 
                                    Property="IsEnabled" 
                                    Value="False">
                                    
                                    <Setter 
                                        Property="Opacity" 
                                        Value="0.5" />
                                    
                                </Trigger>
                                
                            </Style.Triggers>
                            
                        </Style>
                        
                    </Button.Style>
                    
                </Button>

                <!-- CheckBox to enable or disable the download feature. -->
                <CheckBox
                    Grid.Column="2"
                    x:Name="cbDownload"
                    Content="{DynamicResource link.syncInfrakit}"
                    Margin="5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    IsChecked="True"
                    Checked="cbDownload_Checked"
                    Unchecked="cbDownload_Unchecked"/>

            </Grid>
            
        </Grid>

        <!--#endregion Infrakit folder-->

        <!--#region controls-->

        <!-- This grid contains the OK and Cancel buttons. -->
        <Grid
            Grid.Row="4"
            Margin="0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch">

            <!--#region structure definitions-->

            <Grid.ColumnDefinitions>
                
                <ColumnDefinition
                    Width="*"/>

                <ColumnDefinition
                    Width="*"/>

            </Grid.ColumnDefinitions>

            <!--#endregion structure definitions-->

            <!-- This button clicks to save the settings and close the window. -->
            <Button
                Grid.Column="0"
                x:Name="btnOk"
                Content="{DynamicResource ok}"
                Style="{StaticResource BaseButtonStyle}"
                Margin="5"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Click="btnOk_Click"/>

            <!-- This button clicks to close the window without saving the settings. -->
            <Button
                Grid.Column="1"
                x:Name="btnCancel"
                Content="{DynamicResource cancel}"
                Style="{StaticResource BaseButtonStyle}"
                Margin="5"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Click="btnCancel_Click"/>

        </Grid>

        <!--#endregion controls-->

    </Grid>
    
</Window>